{
	// Control+Command
	"@^w" = (moveUp:);
	"@^d" = (moveRight:);
	"@^s" = (moveDown:);
	"@^a" = (moveLeft:);
	
	// Option
	"~w" = (moveUp:);
	"~d" = (moveRight:);
	"~s" = (moveDown:);
	"~a" = (moveLeft:);
	
	"~p" = (moveUp:);
	"~ä" = (moveRight:);
	"~ö" = (moveDown:);
	"~l" = (moveLeft:);
	
	"~r" = (moveToEndOfParagraph:);
	"~u" = (lowercaseWord:);
	"~å" = (moveToBeginningOfParagraph:);
	"~o" = (moveToEndOfParagraph:);
	
	"~x" = (deleteBackward:);
	
	// Shift+Control+Command
	"@^A" = (moveToBeginningOfParagraphAndModifySelection:);
	"@^D" = (moveToEndOfParagraphAndModifySelection:);
	"@^E" = (moveToEndOfParagraphAndModifySelection:);
	
	// Control
	"^a" = (moveLeft:, moveLeft:, selectWord:);
	"^c" = (moveWordForward:);
	"^d" = (moveRight:, selectWord:);
	"^e" = (moveToEndOfParagraph:);
	"^f" = (centerSelectionInVisibleArea:);
	"^h" = (noop:);
	"^s" = (moveRight:, moveLeft:, moveDown:, selectWord:);
	"^t" = (capitalizeWord:);
	"^v" = (noop:);
	"^w" = (moveUp:, moveRight:, selectWord:);
	"^x" = (deleteBackward:);
	"^z" = (moveWordBackward:);
	
	// Control+Option
	"^~c" = (selectNextKeyView:);
	"^~x" = (moveToBeginningOfParagraph:, moveToEndOfParagraphAndModifySelection:, deleteForward:);
	"^~z" = (selectPreviousKeyView:);
	
	// Shift+Control
	"^L" = (selectParagraph:);
	
	// Shift+Command
	"@V" = (selectNextKeyView:);
	"@C" = (selectPreviousKeyView:);
	"@X" = (selectPreviousKeyView:);
	
	// Control
	"^ " = (complete:);
	
	// Shift+Option
	"~W" = (moveUpAndModifySelection:);
	"~D" = (moveRightAndModifySelection:);
	"~S" = (moveDownAndModifySelection:);
	"~A" = (moveLeftAndModifySelection:);
	
	"~R" = (moveToBeginningOfParagraph:);
	"~U" = (uppercaseWord:);
	
  // blank line before current
  "~O" = (moveToBeginningOfParagraph:, moveLeft:, insertNewline:);
	
	"~C" = (moveToEndOfParagraphAndModifySelection:);
	"~X" = (deleteForward:);
	"~Z" = (moveToBeginningOfParagraphAndModifySelection:);
	
	// Bundle
	"@\U003C" = {
		"a" = (selectPreviousKeyView:);
		"w" = (selectPreviousKeyView:);
		"s" = (selectNextKeyView:);
		"d" = (selectNextKeyView:);
	};
	
	"~f" = {
  	// paste after
	  "p" = (breakUndoCoalescing:, moveToEndOfParagraph:,moveRight:,insertNewline:,moveLeft:, paste:);
	  // paste before
	  "P" = (breakUndoCoalescing:, moveToBeginningOfParagraph:, moveLeft:,insertNewline:, paste:);
	  // yank
	  "y" = (setMark:, moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, copy:, swapWithMark:);
	  "d" = { // Delete
	      // 'dd' delete line/paragraph
	      "d" = (setMark:, selectParagraph:, delete:, delete:, swapWithMark:);
	      // 'd$' delete from cursor to end of graf
	      "$" = (moveToEndOfParagraphAndModifySelection:, delete:);
	      // 'd0' delete to beginning of paragraph
	      "0" = (moveToBeginningOfParagraphAndModifySelection:, delete:);
	      // 'd^' delete to beginning of paragraph
	      "^" = (moveToBeginningOfParagraphAndModifySelection:, delete:);
				// wrap () with spaces
		    "(" = (delete:, insertText:, "( ", yank:, insertText:, " ", moveLeft:, insertText:, " )", deleteForward:);
		    // wrap () no spaces
		    ")" = (delete:, insertText:, "( ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, ")", deleteForward:);
		    // wrap [] with spaces
		    "[" = (delete:, insertText:, "[ ", yank:, insertText:, " ", moveLeft:, insertText:, " ]", deleteForward:);
		    // wrap [] no spaces
		    "]" = (delete:, insertText:, "[ ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, "]", deleteForward:);
		    // wrap {} with spaces
		    "{" = (delete:, insertText:, "{ ", yank:, insertText:, " ", moveLeft:, insertText:, " }", deleteForward:);
		    // wrap {} no spaces
		    "}" = (delete:, insertText:, "{ ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, "}", deleteForward:);
		    // wrap <> with spaces
		    "<" = (delete:, insertText:, "< ", yank:, insertText:, " ", moveLeft:, insertText:, " >", deleteForward:);
		    // wrap <> no spaces
		    ">" = (delete:, insertText:, "< ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, ">", deleteForward:);
		    // wrap single quotes
		    "'" = (delete:, insertText:, "' ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, "'", deleteForward:);
		    // wrap backticks
		    "`" = (delete:, insertText:, "` ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, "`", deleteForward:);
		    // wrap double quote
		    "\"" = (delete:, insertText:, "\" ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, "\"", deleteForward:);
		    // wrap pipe
		    "\|" = (delete:, insertText:, "| ", deleteBackward:, yank:, insertText:, " ", moveLeft:, insertText:, "|", deleteForward:);
	  };
		"o" = (moveToEndOfParagraph:, insertNewline:);
		"O" = (moveToBeginningOfParagraph:, moveLeft:, insertNewline:);
		"~3" = (moveToEndOfParagraph:);
		"0" = (moveToBeginningOfParagraph:);
	};
	
	// TextMate Command-Return (Command Enter)
  "^\U000D" = (moveToEndOfParagraph:, insertNewline:);
  // Insert blank line above paragraph (Command Shift Enter)
  "@$\U000D" = (moveToBeginningOfParagraph:, moveLeft:, insertNewline:);
// > Command Option Enter
  // Continue a list item with indentation and include the same delimiter
  "~@\U000D" = ( breakUndoCoalescing, moveToEndOfParagraph:, insertText:, "x", moveToBeginningOfParagraph:, selectWord:, moveRightAndModifySelection:, moveWordForwardAndModifySelection:, moveWordBackwardAndModifySelection:, moveLeftAndModifySelection:, setMark:, deleteToMark:, yank:, moveToEndOfParagraph:, deleteBackward:, insertNewlineIgnoringFieldEditor:, deleteToBeginningOfParagraph:, yank:, insertText:, " ", selectWord:, insertText:, " ");
	
	// bookmark
  "~1" = (setMark:);
  // jump to bookmark
  "~3" = (swapWithMark:,centerSelectionInVisibleArea:);
}